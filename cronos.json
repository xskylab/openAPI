{
    "openapi": "3.0.1",
    "info": {
      "title": "Cronos API",
      "termsOfService": "https://www.google.com/policies/terms/",
      "contact": {
        "email": "contato@hex360.com.br"
      },
      "license": {
        "name": "BSD License"
      },
      "version": "v0.1.0"
    },
    "servers": [
      {
        "url": "https://cronos-api.xskylab.com",
        "description": "API de uso restrito da Hex360 e clientes."
      }
    ],
    "security": [
      {
        "JWT": []
      }
    ],
    "paths": {
      "/auth/obtain_token/": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Obter Token de Autenticação",
          "description": "Recebe um conjunto de credenciais de usuário e retorna seus respectivos _token_\nde acesso e atualização (_access e refresh token_). Para ter acesso a nossas API's\né necessário contato prévio com a equipe de suporte reponsável por seu contrato.\n\nO _access Token_ disponibilizado através dessa API deve ser utilizado como cabeçalho de cada requisição para retorno correto dos dados.\n\nSendo assim, após recebimento do _access_ e do _refresh_, o __access__ deve ser enviado como cabeçalho em `Authorization: Bearer <token>`.",
          "operationId": "ObtainAuthToken",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPair"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TokenObtainPairSuccess"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "data",
          "security": []
        }
      },
      "/auth/refresh_token/": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Atualização de Token de Autenticação",
          "description": "Recebe um _token_ de atualização em JSON e retorna o _token_ de acesso\ncaso o _token_ de atualização seja válido.",
          "operationId": "RefreshToken",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TokenRefreshSuccess"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "data",
          "security": []
        }
      },
      "/orbcomm/fetch/": {
        "get": {
          "tags": [
            "orbcomm"
          ],
          "summary": "Atualização de dados Orbcomm",
          "description": "Acessa os dados disponibilizados pelo satelite e atualiza a base dados.",
          "operationId": "orbcommFetch",
          "parameters": [
            {
              "name": "start_utc",
              "in": "query",
              "description": "Data de início da busca no formato UTC.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "example": {
                    "message": "The request has been successfully completed and X messages were found."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "data"
        }
      },
      "/orbcomm/list/": {
        "get": {
          "tags": [
            "orbcomm"
          ],
          "summary": "Lista os dados armazenados",
          "description": "Busca lista de dados Orbcomm armazenados com valores formatados.",
          "operationId": "orbcommList",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "Filtra os resultados a partir do código identificador da mensagem.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "station",
              "in": "query",
              "description": "Filtra os resultados a partir do identificador da estação.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "start_datetime",
              "in": "query",
              "description": "Filtra os resultados com data e hora superior ou igual ao parametro informado.",
              "example": "2023-12-01 20:00:00",
              "required": false,
              "schema": {
                "type": "datetime"
              }
            },
            {
              "name": "end_datetime",
              "in": "query",
              "description": "Filtra os resultados com data e hora inferior ou igual ao parametro informado.",
              "example": "2024-03-01 13:00:00",
              "required": false,
              "schema": {
                "type": "datetime"
              }
            },
            {
              "name": "start_date",
              "in": "query",
              "description": "Filtra os resultados com data superior ou igual ao parametro informado.",
              "example": "2023-12-01",
              "required": false,
              "schema": {
                "type": "date"
              }
            },
            {
              "name": "end_date",
              "in": "query",
              "description": "Filtra os resultados com data inferior ou igual ao parametro informado.",
              "example": "2024-03-01",
              "required": false,
              "schema": {
                "type": "date"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Orbcomm"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "data"
        },
        "post": {
          "tags": [
            "orbcomm"
          ],
          "summary": "Lista os dados armazenados",
          "description": "Busca lista de dados Orbcomm armazenados com valores formatados.",
          "operationId": "orbcommList",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrbcommListBody"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Orbcomm"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateOrUpdateErrorResponse"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "data"
        }
      }
    },
    "components": {
      "schemas": {
        "CreateOrUpdateMetaResponse": {
          "type": "object",
          "properties": {
            "req_id": {
              "type": "string"
            },
            "ignored": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "TokenObtainPair": {
          "required": [
            "username",
            "password"
          ],
          "type": "object",
          "properties": {
            "username": {
              "title": "Username",
              "minLength": 1,
              "type": "string"
            },
            "password": {
              "title": "Password",
              "minLength": 1,
              "type": "string"
            }
          }
        },
        "OrbcommListBody": {
          "type": "object",
          "properties": {
            "id": {
              "title": "id",
              "type": "integer",
              "example": 1651231871,
              "description": "Filtra os resultados a partir do código identificador da mensagem."
            },
            "station":{
              "type": "string",
              "example": "A998",
              "description": "Filtra os resultados a partir do identificador da estação."
            },
            "start_date":{
              "description": "Filtra os resultados com data superior ou igual ao parametro informado.",
              "example": "2023-12-01 20:00:00",
              "type": "datetime"
            },
            "end_date":{
              "description": "Filtra os resultados com data inferior ou igual ao parametro informado.",
              "example": "2023-12-01 20:00:00",
              "type": "datetime"
            }
          }
        },
        "TokenObtainPairSuccess": {
          "example": {
            "refresh": "",
            "access": ""
          }
        },
        "TokenRefresh": {
          "required": [
            "refresh"
          ],
          "type": "object",
          "properties": {
            "refresh": {
              "title": "Refresh",
              "minLength": 1,
              "type": "string"
            }
          }
        },
        "TokenRefreshSuccess": {
          "example": {
            "access": ""
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "enum": [
                "Forbidden",
                "InvalidParameter",
                "InvalidBodyParameter",
                "ResourceNotFound",
                "Unauthorized",
                "InvalidCredentials",
                "InvalidGrantType"
              ]
            },
            "title": {
              "type": "string"
            },
            "detail": {
              "type": "string"
            },
            "source": {
              "type": "object",
              "properties": {
                "parameter": {
                  "type": "string"
                },
                "pointer": {
                  "type": "string"
                }
              }
            }
          }
        },
        "CreateOrUpdateErrorResponse": {
          "type": "object",
          "properties": {
            "meta": {
              "$ref": "#/components/schemas/CreateOrUpdateMetaResponse"
            },
            "errors": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "example": {
            "errors": [
              {
                "code": "Unauthorized",
                "detail": "A valid bearer token is required",
                "status": "401"
              }
            ]
          }
        },
        "Orbcomm": {
          "type": "object",
          "properties": {
            "id": {
              "title": "ID",
              "type": "integer",
              "readOnly": true
            },
            "value": {
              "title": "Value",
              "type": "string",
              "minLength": 1
            },
            "data": {
              "title": "Data",
              "type": "object",
              "x-nullable": true
            },
            "date": {
              "title": "Date",
              "type": "datetime",
              "x-nullable": true
            },
            "created_at": {
              "title": "Created at",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "station": {
              "title": "Station",
              "type": "string",
              "x-nullable": true
            }
          }
        }
      },
      "securitySchemes": {
        "JWT": {
          "description": "Token de Autenticação",
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
